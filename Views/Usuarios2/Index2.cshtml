@* @model IEnumerable<tallerbiblioteca.Models.Usuario> *@
    @model Paginacion<Usuario>

@{
    ViewData["Title"] = "Usuarios";
}
<div class="row">
    <div class="col-md-4 m-2">
        <p>
           <a class="boton medium" asp-action="Create"> Registrar</a>
        </p>
    </div>

    <div class="col-4 m-2">
        <form asp-action="Index"> 
          
                <input type="text" name="busqueda" placeholder="N° Documento Apellidos o Nombre" class="form-control form-input m-2"/>
                <button type="submit" class="boton medium"  value="Buscar">Buscar</button>
           
        </form>
    </div>

</div>
<div class=" m-3">
    <table class="text-dark fs-5 mt-3">
    <thead>
    <tr>
        <th>
            Id
        </th>
        <th>
           Identificación
        </th>
        <th>
            Nombre
        </th>
        <th>
            Apellido
        </th>
        <th>
            Correo
        </th>
        <th>
            Estado
        </th>
        <th>
          <div class="col-md-4 ">
        <h2 class="fw-bold text-center ms-5 ps-5 ">Usuarios</h2>
    </div>
        </th>
    </tr>
</thead>

        <tbody>
        @foreach (var usuario in Model.Items) {
            <tr>
            
                    <td>
                        @usuario.Id
                    </td>
                    <td>
                        @usuario.Numero_documento
                    </td>
                    <td>
                        @usuario.Name
                    </td>
                    <td>
                        @usuario.Apellido
                    </td>
                    <td>
                        @usuario.Correo
                    </td>
                    <td>
                        @{
                        string color; 
                            if (usuario.Estado == "INHABILITADO" || usuario.Estado=="SUSPENDIDO")
                            {
                                color = "red"; 
                            }
                            else
                            {
                                color = "green";
                            }
                        }
                        <span style="color: @color;">@usuario.Estado</span>
                        

                    </td>
                    <td>
                        <a class="boton medium" asp-action="Edit" asp-route-id="@usuario.Id">Editar</a>
                        <a class="boton medium" asp-action="Inhabilitar" asp-route-id="@usuario.Id"> Inhabilitar</a>
                        <a class="boton medium" asp-action="Suspender" asp-route-id="@usuario.Id" > Suspender</a>
                       
                   
                    </td>
            </tr>
    }
        </tbody>
    </table>
</div>

    <div class="text-center ms-5 ps-5">
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item @(Model.Numero_pagina == 1 ? "disabled" : "")">
                    <a class="page-link text-dark" href="?pagina=1&busqueda=@Context.Request.Query["busqueda"]">Primera</a>
                </li>
                @for (var i = 1; i <= Model.TotalItems; i++)
                {
                    <li class="page-item  @(Model.Numero_pagina == i ? "active" : "") ">
                        <a class=" page-link bg-success text-dark" href="?pagina=@i&busqueda=@Context.Request.Query["busqueda"]">@i</a>
                    </li>
                }
                <li class="page-item @(Model.Numero_pagina == Model.TotalItems ? "disabled" : "")">
                    <a class="page-link text-dark" href="?pagina=@Model.TotalItems&busqueda=@Context.Request.Query["busqueda"]">Última</a>
                </li>
            </ul>
        </nav>
    </div>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    @{
        var Mensaje =  TempData["Mensaje"] as string;
 
        if (Mensaje!=null){
            var mensaje = Newtonsoft.Json.JsonConvert.DeserializeObject<ResponseModel>(Mensaje);
        <script>
            const cuerpo = `@Html.Raw(Newtonsoft.Json.JsonConvert.ToString(mensaje.Mensaje))`;
            const icono = "@mensaje.Icono";
            MostrarMensajeUsuarios(icono, cuerpo);
        </script>
          
        }
      
    }
   

}
 


