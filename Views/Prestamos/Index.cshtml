@using System.Security.Claims;
@* @model IEnumerable<tallerbiblioteca.Models.Peticiones> *@
    @model Paginacion<Prestamo>

@{
    ViewData["Title"] = "Prestamos";
}

  <h1 class="fw-bold fs-1 text-center" style="color: black">Prestamos</h1>
<div class="row">
    <div class="col-md-2">
        <p>
            @if ((User.FindFirst(ClaimTypes.Role)?.Value == "1")||(User.FindFirst(ClaimTypes.Role)?.Value == "3")){
                <button><a class="" asp-action="Create">  Registrar </a></button>
                <form asp-controller="/Pdf" asp-action="GenerarPdfPrestamos" method="post" class="mt-2">
                    <button type="submit">Generar reporte</button>
                </form>
            }
           
        </p>
    </div>
    @if ((User.FindFirst(ClaimTypes.Role)?.Value == "1") || (User.FindFirst(ClaimTypes.Role)?.Value == "3"))
    {
        <div class="col-8 mb-4">
            <form asp-action="Index" class="row ">
                <div class="col-md-4">
                    <label for="busqueda" class="form-label">Búsqueda:</label>
                    <input type="text" name="busqueda" id="busqueda" placeholder="Identificación usuario |  Id ejemplar" class="form-control" />
                </div>
                <div class="col-md-3">
                    <label for="fechaInicio" class="form-label">Desde:</label>
                    <input type="date" name="fechaInicio" id="fechaInicio" class="form-control" />
                </div>
                <div class="col-md-3">
                    <label for="fechaFin" class="form-label">Hasta:</label>
                    <input type="date" name="fechaFin" id="fechaFin" class="form-control" />
                </div>
                <div class="col-md-2 mt-3">
                    <button type="submit" class="">Buscar</button>
                </div>
            </form>
        </div>
    }

</div>
<table>
    <thead>
        <tr>
            <th> Id </th>
            <th> Id ejemplar</th>
            <th> Nombre Libro</th>
            <th> Nombre usuario </th>
            <th> Fecha Prestamo</th>
            <th> Fecha Devolución</th>
            <th> Estado </th>
              @if ((User.FindFirst(ClaimTypes.Role)?.Value == "1") || (User.FindFirst(ClaimTypes.Role)?.Value == "3")){
            <th>Acción</th>
              }
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Items) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td style="width: 15px;">
                @Html.DisplayFor(modelItem => item.Peticion.Id_ejemplar)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Peticion.Ejemplar.Libro.Nombre)
            </td>
         
            <td>
                @Html.DisplayFor(modelItem => item.Peticion.NombreUsuario) @Html.DisplayFor(modelItem => item.Peticion.Usuario.Apellido)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fecha_inicio)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fecha_fin)
            </td>
          <td style="color: @GetColorForEstado(item.Estado)">
    @Html.DisplayFor(modelItem => item.Estado)
</td>
                @if ((User.FindFirst(ClaimTypes.Role)?.Value == "1") || (User.FindFirst(ClaimTypes.Role)?.Value == "3"))
                {
                    <td>
                        <button data-bs-target="#create_@item.Id" data-bs-toggle="modal" class=""> Devolver </button>
                    <div class="modal fade" id="create_@item.Id" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">Registrar devolución</h5>
                                <button type="button" class="boton-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div
                            <div class="modal-body">
                                 <p> <strong class="fs-5 fw-bold"> Vamos a registrar la devolución del prestamo: </strong> <span class=" fw-bold text-danger fs-5">@Html.DisplayFor(modelItem => item.Id)</span> </p>

                                <p > <strong class="fw-bold fs-5" >Id Ejemplar:</strong> <span class="text-success fs-5"> @Html.DisplayFor(modelItem => item.Peticion.Ejemplar.Id) </span></p>
                                <p> <strong class="fw-bold fs-5">Libro:</strong> <span class="text-success fs-5">@Html.DisplayFor(modelItem => item.Peticion.Ejemplar.Libro.Nombre)</span></p>
                                <p><strong class="fw-bold fs-5">Usuario:</strong> <span class="text-success fs-4"> @Html.DisplayFor(modelItem => item.Peticion.Usuario.Name) @Html.DisplayFor(modelItem => item.Peticion.Usuario.Apellido) </span></p>

                                <form asp-controller="Devoluciones" asp-action="Registrar" method="post">
                                    <div class="form-group">
                                        <label for="id_prestamo" class="control-label"></label>
                                        <input name="Id_prestamo" value="@item.Id" class="form-control" type="hidden" />
                                    </div>
                                    <div class="form-group">
                                        <label for="observaciones" class="control-label">Observaciones</label>
                                        <textarea rows="4" cols="50" name="observaciones" class="form-control"></textarea>
                                    </div>
                                    <button type="submit" value="" class="">Enviar</button>
                                </form>
                            </div>
                          
                            </div>
                        </div>
                    </div>
                
                    <button><a asp-action="Edit" asp-route-id="@item.Id" class=""></a>Renovar</button>
                @* <button class="d-inline ms-2"><a asp-action="Delete" asp-route-id="@item.Id"><i class="fa-solid fa-xmark fa-2xl" style="color: #fa0000;"></i></a></button> *@
            </td>
            }
        </tr>
}
    </tbody>
</table>
 <div class="row">
               <div class="pagination p1">
                    <ul>
                         <a style="width:80px;" class="page-link text-dark me-1" href="?pagina=1&busqueda=@Context.Request.Query["busqueda"]">Primera</a>
                        <a href="?pagina=@(Model.Numero_pagina - 1)&busqueda=@Context.Request.Query["busqueda"]"><li><<</li></a>
                        @for (var i = 1; i <= Model.TotalItems; i++)
                        {
                            
                            <a class=" me-1 @(Model.Numero_pagina == i ? " is-active" : "") " href="?pagina=@i&busqueda=@Context.Request.Query["busqueda"]">@i</a>
                            
                        }
                         @if (Model.Numero_pagina < Model.TotalItems)
                        {
                           
                                <a href="?pagina=@(Model.Numero_pagina + 1)&busqueda=@Context.Request.Query["busqueda"]">>></a>
                           
                        }
                        <a class="ms-1" href="?pagina=@Model.TotalItems&busqueda=@Context.Request.Query["busqueda"]"><li>Fin</li></a>
                    </ul>
                </div>
            </div>

@functions {
    string GetColorForEstado(string estado) {
        switch (estado) {
            case "En curso":
                return "blue";
            case "en espera por devolver":
                return "red";
            case "Devuelto":
                return "green";
            default:
                return "black"; // Puedes establecer un color predeterminado o manejar otros casos según tus necesidades.
        }
    }
}

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    @{
        var Mensaje =  TempData["Mensaje"] as string;
 
        if (Mensaje!=null){
            var mensaje = Newtonsoft.Json.JsonConvert.DeserializeObject<ResponseModel>(Mensaje);
        <script>
             console.log("se va mostrar");
             
            const cuerpo = `@Html.Raw(Newtonsoft.Json.JsonConvert.ToString(mensaje.Mensaje))`;
            const icono = "@mensaje.Icono";
            MostrarMensajeUsuarios(icono, cuerpo);
        </script>
          
        }
      
    }
}