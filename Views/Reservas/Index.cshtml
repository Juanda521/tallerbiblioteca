@using System.Security.Claims;
@using tallerbiblioteca.Controllers
@model Paginacion<Reserva>;
<div class="row" style="color: black">
    @if (User.FindFirst(ClaimTypes.Role)?.Value == "1")
    {
        <div class="col-4 justify-content-between">
            <div class="mt-2">
                <button><a asp-action="Create">Crear Reserva</a></button>
                <button><a asp-action="Rechazadas">Rechazadas</a></button>
                <form asp-controller="/Pdf" asp-action="GenerarPdfReservas" method="post" class="mt-2">
                    <button type="submit">Generar reporte</button>
                </form>
            </div>
        </div>
          <div class="col-4 justify-content-between">
            <form asp-action="Index" class="d-flex">

                <div class="col-md-4">
                    <label for="buscar" class="form-label">Búsqueda:</label>
                    <input class="form-control mr-2" type="text" id="buscar" name="buscar" placeholder="Primer Nombre - libro">
                        <label for="fecha" class="form-label">Día</label>
                        <input class="form-control" type="date" id="fecha" name="fecha">
                    <button class="mt-2" type="submit" style="color: black"> Buscar</button>
                  
                </div>
            </form>
            </div>
        
        }
     </div>    
<span class="input-border"></span>
<table class="mt-2">
    <thead>
        <tr>
            <th>Ejemplar</th>
            <th>
               Usuario
            </th>
            <th>
                Fecha
            </th>
            <th>
                Estado
            </th>
            @if (User.FindFirst(ClaimTypes.Role)?.Value == "1")
    {
            <th>Acción</th>
    }
        </tr>
    </thead>
    <tbody>
 <div style="color: black">
@foreach (var item in Model.Items) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Ejemplar.Libro.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Usuario.Name) @Html.DisplayFor(modelItem => item.Usuario.Apellido)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaReserva)
            </td>
                <td>
                    @{
                        string color;
                        if (item.Estado == "RECHAZADA")
                        {
                            color = "red";
                        }
                        else
                        {
                            color = "green";
                        }
                    }
                    <span style="color: @color;">@item.Estado</span>
                </td>
                
                    @if (User.FindFirst(ClaimTypes.Role)?.Value == "1")
                    {
                        <td>
                        <div class="flex"></div>
                        @if (item.Estado == "ACTIVO")
                        {
                            <form id="myForm" asp-controller="Peticiones" asp-action="Registrar" method="post">
                                <input type="hidden" name="Id_ejemplar" value="@item.IdEjemplar">
                                <input type="hidden" name="motivo" value="Prestamo Libro">
                                <input type="hidden" name="Id_usuario" value="@User.FindFirstValue(ClaimTypes.NameIdentifier)">
                                <span class="fa-solid fa-circle-check fa-2xl" style="color: #83B440; cursor: pointer;"></span>
                                <a asp-action="Delete" class="fa-solid fa-xmark fa-2xl" style="color: #fa0000;" asp-route-id="@item.Id"></a>
                            </form>
                        }
                    </td>
                    }

                
        </tr>
}
        </div>
        
    </tbody>
</table>
<div class="pagination p1">
    <ul>
        <a style="width:80px;" class="page-link text-dark me-1" href="?pagina=1&busqueda=@Context.Request.Query["busqueda"]">Primera</a>
        <a href="?pagina=@(Model.Numero_pagina - 1)&busqueda=@Context.Request.Query["busqueda"]">
        <li><<</li></a>
        @for (var i = 1; i <= Model.TotalItems; i++)
        {

            <a class=" me-1 @(Model.Numero_pagina == i ? " is-active" : "") " href="?pagina=@i&busqueda=@Context.Request.Query["busqueda"]">@i</a>

        }
        @if (Model.Numero_pagina < Model.TotalItems)
        {

            <a href="?pagina=@(Model.Numero_pagina+ 1)&busqueda=@Context.Request.Query["busqueda"]">>></a>

        }
        <a class="ms-1" href="?pagina=@Model.TotalItems&busqueda=@Context.Request.Query["busqueda"]">
        <li>Fin</li></a>
    </ul>
</div>
@if (TempData["ReservaPentiende"] != null && TempData["ReservaPentiende"].ToString() == "True")
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                icon: 'error',
                title: 'Error al reservar',
                text: 'Ya tienes una reserva pendiente, no puedes tener dos',
                showConfirmButton: true,
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '@Url.Action("Catalog", "Libros")';  // Reemplaza 'NombreController' con el nombre real de tu controlador
                }
            });
        });
    </script>
}
@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    @{
        var Mensaje = TempData["Mensaje"] as string;

        if (Mensaje != null)
        {
            var mensaje = Newtonsoft.Json.JsonConvert.DeserializeObject<ResponseModel>(Mensaje);
            <script>
                console.log("se va mostrar");

                const cuerpo = `@Html.Raw(Newtonsoft.Json.JsonConvert.ToString(mensaje.Mensaje))`;
                const icono = "@mensaje.Icono";
                MostrarMensajeUsuarios(icono, cuerpo);
            </script>

        }
        <script>
            const myForm = document.getElementById("myForm");
            const triggerElement = document.querySelector(".fa-circle-check");

            triggerElement.addEventListener("click", () => {
                myForm.submit();
            });

        </script>
    }
    }